# https://kubernetes.io/docs/concepts/services-networking/ingress/#the-ingress-resource
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: mars-fontend
  namespace: mars
spec:
  rules:
  - host: mars.preview.ruijie.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: mars-fontend
            port:
              number: 4200
---
apiVersion: v1
items:
- apiVersion: v1
  kind: Service
  metadata:
    name: mars-fontend
    namespace: mars
    labels:
      app: mars-fontend
  spec:
    selector:
      app: mars-fontend
    ports:
    - name: http
      port: 4200
      targetPort: 5000
      protocol: TCP
    sessionAffinity: None
    type: ClusterIP

- apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: mars-fontend
    namespace: mars
    labels:
      app: mars-fontend
  spec:
    replicas: 1
    revisionHistoryLimit: 5
    strategy:
      rollingUpdate:
        maxSurge: 50%
        maxUnavailable: 50%
      type: RollingUpdate
    selector:
      matchLabels:
        app: mars-fontend
    template:
      metadata:
        labels:
          app: mars-fontend
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: app-fontend
                    operator: In
                    values:
                    - mars
                topologyKey: kubernetes.io/hostname
              weight: 100
        containers:
        - image: 172.17.162.231/platform/mars-fontend:v1.0.0
          name: fontend
          imagePullPolicy: Always
          ports:
          - containerPort: 5000
            name: mars-port
          resources:
            limits:
              memory: 4Gi
              cpu: 4
            requests:
              memory: 128Mi
              cpu: 10m
          env:
          - name: WEBAPI__SERVER
            value: 'mars-apiserver.mars:8080'
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
kind: List
